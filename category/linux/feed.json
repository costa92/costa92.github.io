{
    "version": "https://jsonfeed.org/version/1",
    "title": "翼舞成梦",
    "subtitle": "翼舞成梦",
    "icon": "https://costalong.com/images/favicon.ico",
    "description": "",
    "home_page_url": "https://costalong.com",
    "items": [
        {
            "id": "https://costalong.com/2024/07/16/linux/netstat/",
            "url": "https://costalong.com/2024/07/16/linux/netstat/",
            "title": "Linux 网络工具 netstat",
            "date_published": "2024-07-16T02:30:48.000Z",
            "content_html": "<h1 id=\"netstat\"><a href=\"#netstat\" class=\"headerlink\" title=\"netstat\"></a>netstat</h1><h2 id=\"1-netstat-命令\"><a href=\"#1-netstat-命令\" class=\"headerlink\" title=\"1. netstat 命令\"></a>1. netstat 命令</h2><p>netstat 命令用于显示各种网络相关信息，如网络连接，路由表，接口状态 (Interface Statistics)，masquerade 连接，多播成员 (Multicast Memberships) 等等。</p>\n<h3 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h3><pre class=\" language-sh\"><code class=\"language-sh\">netstat [-acCeFghilMnNoprstuvVwx][-A<网络类型>][--ip]\n</code></pre>\n<h3 id=\"参数\"><a href=\"#参数\" class=\"headerlink\" title=\"参数\"></a>参数</h3><pre class=\" language-sh\"><code class=\"language-sh\">-a或--all 显示所有连线中的Socket。\n-A<网络类型>或--<网络类型> 列出该网络类型连线中的相关地址。\n-c或--continuous 持续列出网络状态。\n-C或--cache 显示路由器配置的快取信息。\n-e或--extend 显示网络其他相关信息。\n-F或--fib 显示路由缓存。\n-g或--groups 显示多重广播功能群组组员名单。\n-h或--help 在线帮助。\n-i或--interfaces 显示网络界面信息表单。\n-l或--listening 显示监控中的服务器的Socket。\n-M或--masquerade 显示伪装的网络连线。\n-n或--numeric 直接使用IP地址，而不通过域名服务器。\n-N或--netlink或--symbolic 显示网络硬件外围设备的符号连接名称。\n-o或--timers 显示计时器。\n-p或--programs 显示正在使用Socket的程序识别码和程序名称。\n-r或--route 显示Routing Table。\n-s或--statistics 显示网络工作信息统计表。\n-t或--tcp 显示TCP传输协议的连线状况。\n-u或--udp 显示UDP传输协议的连线状况。\n-v或--verbose 显示指令执行过程。\n-V或--version 显示版本信息。\n-w或--raw 显示RAW传输协议的连线状况。\n-x或--unix 此参数的效果和指定\"-A unix\"参数相同。\n--ip或--inet 此参数的效果和指定\"-A inet\"参数相同。\n</code></pre>\n<h3 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h3><h4 id=\"1-显示网络状态\"><a href=\"#1-显示网络状态\" class=\"headerlink\" title=\"1. 显示网络状态\"></a>1. 显示网络状态</h4><pre class=\" language-sh\"><code class=\"language-sh\">netstat -a\n</code></pre>\n<p>结果：</p>\n<pre class=\" language-sh\"><code class=\"language-sh\">Proto Recv-Q Send-Q Local Address           Foreign Address         State\ntcp        0      0 192.168.122.1:domain    0.0.0.0:*               LISTEN\ntcp        0      0 localhost:ipp           0.0.0.0:*               LISTEN\ntcp        0      0 localhost:35600         0.0.0.0:*               LISTEN\ntcp        0      0 127.0.0.54:domain       0.0.0.0:*               LISTEN\ntcp        0      0 localhost:31080         0.0.0.0:*               LISTEN\ntcp        0      0 localhost:31055         0.0.0.0:*               LISTEN\ntcp        0      0 hellotalk:domain        0.0.0.0:*               LISTEN\ntcp        0      0 127.0.0.53:domain       0.0.0.0:*               LISTEN\ntcp        0      0 172.16.0.112:50006      113.240.72.111:https    TIME_WAIT\ntcp        0      0 10.100.100.164:56010    10.40.2.11:27017        ESTABLISHED\ntcp        0      0 10.100.100.164:43846    10.40.2.5:27017         ESTABLISHED\n</code></pre>\n<p>字段说明：</p>\n<p>1.Proto：传输层协议 TCP 或 UDP</p>\n<p>2.Recv-Q：接收队列</p>\n<p>3.Send-Q：发送队列</p>\n<p>4.Local Address：本地地址</p>\n<p>5.Foreign Address：远程地址</p>\n<p>6.State：状态 LISTEN：侦听，ESTABLISHED：已建立，TIME_WAIT：关闭</p>\n<h4 id=\"2-显示当前户籍-UDP-连接状况\"><a href=\"#2-显示当前户籍-UDP-连接状况\" class=\"headerlink\" title=\"2. 显示当前户籍 UDP 连接状况\"></a>2. 显示当前户籍 UDP 连接状况</h4><pre class=\" language-sh\"><code class=\"language-sh\">netstat -nu\n</code></pre>\n<p>结果：</p>\n<pre class=\" language-sh\"><code class=\"language-sh\">激活Internet连接 (w/o 服务器)\nProto Recv-Q Send-Q Local Address           Foreign Address         State\nudp        0      0 127.0.0.1:56871         127.0.1.1:53            ESTABLISHED\nudp        0      0 172.16.0.112:42799      106.38.222.156:443      ESTABLISHED\nudp        0      0 172.16.0.112:68         172.16.0.1:67           ESTABLISHED\n</code></pre>\n<h4 id=\"3-显示当前户籍-TCP-连接状况\"><a href=\"#3-显示当前户籍-TCP-连接状况\" class=\"headerlink\" title=\"3. 显示当前户籍 TCP 连接状况\"></a>3. 显示当前户籍 TCP 连接状况</h4><pre class=\" language-sh\"><code class=\"language-sh\">netstat -nt\n</code></pre>\n<p>结果：</p>\n<pre class=\" language-sh\"><code class=\"language-sh\">激活Internet连接 (w/o 服务器)\nProto Recv-Q Send-Q Local Address           Foreign Address         State\ntcp        0      0 10.100.100.164:56010    10.40.2.11:27017        ESTABLISHED\ntcp        0      0 10.100.100.164:43846    10.40.2.5:27017         ESTABLISHED\ntcp        0      0 172.16.0.112:60087      43.159.193.150:8002     TIME_WAIT\ntcp        0      0 172.16.0.112:57712      113.240.72.99:443       TIME_WAIT\ntcp        0      0 10.100.100.164:55986    10.40.2.11:27017        ESTABLISHED\ntcp        0      0 10.100.100.164:43722    10.40.2.5:27017         ESTABLISHED\n</code></pre>\n<h4 id=\"4-显示当前系统中所有正在监听的-TCP-端口、相关的进程以及其状态\"><a href=\"#4-显示当前系统中所有正在监听的-TCP-端口、相关的进程以及其状态\" class=\"headerlink\" title=\"4. 显示当前系统中所有正在监听的 TCP 端口、相关的进程以及其状态\"></a>4. 显示当前系统中所有正在监听的 TCP 端口、相关的进程以及其状态</h4><pre class=\" language-sh\"><code class=\"language-sh\">netstat -ntlp\n</code></pre>\n<p>结果：</p>\n<pre class=\" language-sh\"><code class=\"language-sh\">Active Internet connections (only servers)\nProto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name\ntcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      1234/nginx\ntcp        0      0 127.0.0.1:3306          0.0.0.0:*               LISTEN      2345/mysqld\ntcp6       0      0 :::22                   :::*                    LISTEN      3456/sshd\n</code></pre>\n<p>字段解析：</p>\n<ol>\n<li><p>Proto：协议</p>\n<ul>\n<li>tcp：表示 TCP 协议。</li>\n<li>tcp6：表示 IPv6 的 TCP 协议。</li>\n</ul>\n</li>\n<li><p>Recv-Q 和 Send-Q：</p>\n<ul>\n<li>Recv-Q：表示接收队列</li>\n<li>Send-Q：表示发送队列</li>\n</ul>\n</li>\n<li><p>Local Address：本地地址</p>\n<ul>\n<li>0.0.0.0:80：本地地址和端口号，0.0.0.0 表示监听所有接口的 IP 地址，80 是端口号。</li>\n<li>127.0.0.1:3306：本地环回地址（localhost）上的端口 3306。</li>\n<li>:::22：IPv6 地址的端口 22。</li>\n</ul>\n</li>\n<li><p>Foreign Address：远程地址</p>\n<ul>\n<li>0.0.0.0:* 和 :::*：表示监听所有外部地址。</li>\n</ul>\n</li>\n<li><p>State：状态</p>\n<ul>\n<li>LISTEN：表示服务器正在监听 TCP 连接请求。</li>\n<li>ESTABLISHED：表示连接已经建立。</li>\n<li>TIME_WAIT：表示主动关闭连接的一方在关闭连接后，等待 2MSL 后依然没有收到对方的 FIN 报文，处于等待关闭状态。</li>\n<li>CLOSE_WAIT：表示被动关闭连接的一方在收到对方的 FIN 报文后，等待应用进程关闭连接。</li>\n<li>LAST_ACK：表示被动关闭连接的一方在发送完 FIN 报文后，等待对方的 ACK 报文，如果收到 ACK 报文，则处于 CLOSED 状态，否则处于 TIME_WAIT 状态。</li>\n<li>CLOSED：表示连接已经关闭。</li>\n<li>SYN_RECV：表示正在等待处理的请求数目。</li>\n<li>SYN_SENT：表示正在等待远程连接请求。</li>\n<li>CLOSING：表示正在等待远程连接关闭请求。</li>\n<li>UNKNOWN：表示未知状态。</li>\n<li>LISTENING：表示正在等待远程连接请求。</li>\n<li>IDLE：表示连接处于空闲状态。</li>\n<li>BOUND：表示正在等待远程连接请求。</li>\n<li>FIN_WAIT1: 套接字已经发出了一个 FIN 请求，表示它已经完成了发送数据，正在等待对方的 ACK 响应。</li>\n<li>FIN_WAIT2: 套接字收到了对 FIN 请求的 ACK 响应，正在等待对方发出 FIN 请求。</li>\n</ul>\n</li>\n<li><p>PID/Program name：进程 ID 和进程名称</p>\n<ul>\n<li>1234/nginx：进程 ID 为 1234 的 nginx 进程正在监听 80 端口。</li>\n<li>2345/mysqld：进程 ID 为 2345 的 mysqld 进程正在监听 3306 端口。</li>\n<li>3456/sshd：进程 ID 为 3456 的 sshd 进程正在监听 22 端口。</li>\n</ul>\n</li>\n</ol>\n<h4 id=\"5-显示网卡列表\"><a href=\"#5-显示网卡列表\" class=\"headerlink\" title=\"5. 显示网卡列表\"></a>5. 显示网卡列表</h4><pre class=\" language-sh\"><code class=\"language-sh\"> netstat -i\n</code></pre>\n<p>结果：</p>\n<pre class=\" language-sh\"><code class=\"language-sh\">Iface             MTU    RX-OK RX-ERR RX-DRP RX-OVR    TX-OK TX-ERR TX-DRP TX-OVR Flg\nbr-717e070443f8  1500        0      0      0 0             0      0      0      0 BMU\nbr-7f56e5476213  1500        0      0      0 0             0      0      0      0 BMU\ndocker0          1500        0      0      0 0             0      0      0      0 BMU\neno1             1500  3838424      0      0 0       3615697      0      0      0 BMRU\nlo              65536  1115368      0      0 0       1115368      0      0      0 LRU\nutun             1400  2667684      0      0 0       2598307      0      0      0 MOPRU\nvirbr0           1500        0      0      0 0             0      0      0      0 BMU\n</code></pre>\n<p>字段解析：</p>\n<ol>\n<li>Iface：网卡名称</li>\n<li>MTU：最大传输单元</li>\n<li>RX-OK：接收数据包总数</li>\n<li>RX-ERR：接收数据包错误总数</li>\n<li>RX-DRP：接收数据包丢弃总数</li>\n<li>RX-OVR：接收数据包溢出总数</li>\n<li>TX-OK：发送数据包总数</li>\n<li>TX-ERR：发送数据包错误总数</li>\n<li>TX-DRP：发送数据包丢弃总数</li>\n<li>TX-OVR：发送数据包溢出总数</li>\n<li>Flg：标志</li>\n</ol>\n<ul>\n<li>BMU：广播地址</li>\n<li>BMRU：广播地址和多播地址</li>\n<li>MOPRU：多播地址</li>\n<li>LRU：本地地址</li>\n<li>MPRU：多播地址和本地地址</li>\n<li>OPRU：多播地址和本地地址和广播地址</li>\n<li>ALL：所有地址</li>\n</ul>\n<p>###＃ 6. 显示组播组的关系</p>\n<pre class=\" language-sh\"><code class=\"language-sh\">netstat -g\n</code></pre>\n<p>结果：</p>\n<pre class=\" language-sh\"><code class=\"language-sh\">IPv6/IPv4 Group Memberships\nInterface       RefCnt Group\n--------------- ------ ---------------------\nlo              1      mdns.mcast.net\nlo              1      all-systems.mcast.net\n</code></pre>\n<p>字段解析：</p>\n<ol>\n<li>Interface：网卡名称</li>\n<li>RefCnt：引用计数</li>\n<li>Group：组播组</li>\n</ol>\n<p>###＃ 7. 显示网络统计信息</p>\n<pre class=\" language-sh\"><code class=\"language-sh\">netstat -s\n</code></pre>\n<p>结果：</p>\n<pre class=\" language-sh\"><code class=\"language-sh\">Ip:\n    Forwarding: 1\n    7269919 total packets received\n    0 forwarded\n    0 incoming packets discarded\n    7265662 incoming packets delivered\n    7078118 requests sent out\n    28 outgoing packets dropped\n    7895 dropped because of missing route\n    8416 reassemblies required\n    4208 packets reassembled ok\n    6 outgoing packets failed fragmentation\n    OutTransmits: 7078115\nIcmp:\n    2022 ICMP messages received\n    6 input ICMP message failed\n    ICMP接收历史\n        destination unreachable: 2020\n        echo requests: 2\n    2176 ICMP messages sent\n    0 ICMP messages failed\n    OutRateLimitHost: 253\n    ICMP发出历史\n        destination unreachable: 2174\n        echo replies: 2\nIcmpMsg:\n        InType3: 2020\n        InType8: 2\n        OutType0: 2\n        OutType3: 2174\nTcp:\n    202192 active connection openings\n    10375 passive connection openings\n    120686 failed connection attempts\n    3047 connection resets received\n    77 connections established\n    6857878 segments received\n    7083293 segments sent out\n    16799 segments retransmitted\n    1119 bad segments received\n    131681 resets sent\nUdp:\n    1456958 packets received\n    2421 packets to unknown port received\n    32 packet receive errors\n    556388 packets sent\n    0 receive buffer errors\n    8 send buffer errors\n    InCsumErrors: 32\n    IgnoredMulti: 12191\nUdpLite:\nTcpExt:\n    3 ICMP packets dropped because they were out-of-window\n    30122 TCP sockets finished time wait in fast timer\n    1 packets rejected in established connections because of timestamp\n    119999 delayed acks sent\n    39 delayed acks further delayed because of locked socket\n    Quick ack mode was activated 34511 times\n    1065795 packet headers predicted\n    687289 acknowledgments not containing data payload received\n    1455607 predicted acknowledgments\n    TCPSackRecovery: 327\n    Detected reordering 676 times using SACK\n    TCPDSACKUndo: 97\n    87 congestion windows recovered without slow start after partial ack\n    TCPLostRetransmit: 8875\n    TCPSackFailures: 8\n    3 timeouts in loss state\n    466 fast retransmits\n    133 retransmits in slow start\n    TCPTimeouts: 11823\n    TCPLossProbes: 5420\n    TCPLossProbeRecovery: 82\n    TCPSackRecoveryFail: 10\n    TCPBacklogCoalesce: 2369\n    TCPDSACKOldSent: 34608\n    TCPDSACKOfoSent: 51\n    TCPDSACKRecv: 1827\n    TCPDSACKOfoRecv: 16\n    1537 connections reset due to unexpected data\n    2171 connections reset due to early user close\n    484 connections aborted due to timeout\n    10 times unable to send RST due to no memory\n    TCPSACKDiscard: 2\n    TCPDSACKIgnoredOld: 7\n    TCPDSACKIgnoredNoUndo: 815\n    TCPSackShifted: 26\n    TCPSackMerged: 342\n    TCPSackShiftFallback: 1984\n    IPReversePathFilter: 22\n    TCPRcvCoalesce: 203651\n    TCPOFOQueue: 50737\n    TCPOFOMerge: 54\n    TCPChallengeACK: 879\n    TCPSYNChallenge: 1140\n    TCPSpuriousRtxHostQueues: 18\n    TCPAutoCorking: 458417\n    TCPFromZeroWindowAdv: 35\n    TCPToZeroWindowAdv: 35\n    TCPWantZeroWindowAdv: 167\n    TCPSynRetrans: 7312\n    TCPOrigDataSent: 3398432\n    TCPHystartTrainDetect: 22\n    TCPHystartTrainCwnd: 1073\n    TCPHystartDelayDetect: 42\n    TCPHystartDelayCwnd: 1831\n    TCPACKSkippedSeq: 286\n    TCPACKSkippedChallenge: 265\n    TCPKeepAlive: 97079\n    TCPDelivered: 3475194\n    TCPAckCompressed: 14499\n    TcpTimeoutRehash: 11471\n    TCPDSACKRecvSegs: 1841\n    TCPDSACKIgnoredDubious: 2\nIpExt:\n    InNoRoutes: 17\n    InMcastPkts: 118643\n    OutMcastPkts: 8410\n    InBcastPkts: 17704\n    OutBcastPkts: 1960\n    InOctets: 3807905209\n    OutOctets: 1523626052\n    InMcastOctets: 53391437\n    OutMcastOctets: 1586713\n    InBcastOctets: 9013152\n    OutBcastOctets: 152880\n    InNoECTPkts: 7512863\n    InECT0Pkts: 18\nMPTcpExt:\n</code></pre>\n<h4 id=\"显示监听的套接口\"><a href=\"#显示监听的套接口\" class=\"headerlink\" title=\"显示监听的套接口\"></a>显示监听的套接口</h4><pre class=\" language-sh\"><code class=\"language-sh\">netstat -l\n</code></pre>\n<pre class=\" language-sh\"><code class=\"language-sh\">激活Internet连接 (仅服务器)\nProto Recv-Q Send-Q Local Address           Foreign Address         State      \ntcp        0      0 hellotalk:domain        0.0.0.0:*               LISTEN     \ntcp6       0      0 [::]:3100               [::]:*                  LISTEN     \nudp        0      0 0.0.0.0:45010           0.0.0.0:*                                            \nudp        0      0 0.0.0.0:mdns            0.0.0.0:*                          \nudp6       0      0 [::]:49287              [::]:*                             \n              7          \n活跃的UNIX域套接字 (仅服务器)\nProto RefCnt Flags       Type       State         I-Node   路径\nunix  2      [ ACC ]     流        LISTENING     1010159  /tmp/.java_pid169241.tmp\n</code></pre>\n<p>字段解析：</p>\n<ul>\n<li>Proto：协议名，如tcp、udp、unix等</li>\n<li>Recv-Q：接收队列，即收到的但未处理的数据包数</li>\n<li>Send-Q：发送队列，即发送但未确认的数据包数</li>\n<li>Local Address：本地地址</li>\n<li>Foreign Address：远程地址</li>\n<li>State：套接字状态，如LISTEN、ESTABLISHED等</li>\n<li>I-Node：套接字inode号</li>\n<li>路径：unix域套接字路径</li>\n<li>RefCnt：引用计数</li>\n<li>Flags：套接字标志，如S表示套接字是被动打开的，即服务器端，而A表示套接字是主动打开的，即客户端</li>\n<li>Type：套接字类型，如流套接字、数据报套接字等</li>\n<li>路径：unix域套接字路径</li>\n</ul>\n<h4 id=\"查看路由表\"><a href=\"#查看路由表\" class=\"headerlink\" title=\"查看路由表\"></a>查看路由表</h4><pre class=\" language-sh\"><code class=\"language-sh\">netstat -r\n</code></pre>\n<pre class=\" language-sh\"><code class=\"language-sh\">内核 IP 路由表\nDestination     Gateway         Genmask         Flags   MSS Window  irtt Iface\ndefault         172.16.0.1      0.0.0.0         UG        0 0          0 eno1\none.one.one.one 0.0.0.0         255.255.255.255 UH        0 0          0 utun\n10.10.0.0       0.0.0.0         255.255.0.0     U         0 0          0 utun\n10.40.0.0       0.0.0.0         255.255.0.0     U         0 0          0 utun\n10.100.100.0    0.0.0.0         255.255.255.0   U         0 0          0 utun\n30.100.0.0      0.0.0.0         255.252.0.0     U         0 0          0 utun\nfeilian.hellota 172.16.0.1      255.255.255.255 UGH       0 0          0 eno1\nlink-local      0.0.0.0         255.255.0.0     U         0 0          0 utun\n172.16.0.0      0.0.0.0         255.255.254.0   U         0 0          0 eno1\n172.16.6.20     172.16.0.1      255.255.255.255 UGH       0 0          0 eno1\n172.17.0.0      0.0.0.0         255.255.0.0     U         0 0          0 docker0\n192.168.49.0    0.0.0.0         255.255.255.0   U         0 0          0 br-717e070443f8\n192.168.58.0    0.0.0.0         255.255.255.0   U         0 0          0 br-7f56e5476213\n192.168.122.0   0.0.0.0         255.255.255.0   U         0 0          0 virbr0\n</code></pre>\n<p>字段解析：</p>\n<ul>\n<li>Destination：目的网络或目的主机</li>\n<li>Gateway：指定用于转发包的网关。</li>\n<li>Genmask：子网掩码</li>\n<li>Flags：路由标志，如U表示路由是活动的，H表示目的地址是一个主机，G表示使用网关</li>\n<li>MSS：最大分段大小</li>\n<li>Window：TCP窗口大小</li>\n<li>irtt：初始RTT</li>\n<li>Iface：路由接口</li>\n</ul>\n<h4 id=\"只列出监听中的连接\"><a href=\"#只列出监听中的连接\" class=\"headerlink\" title=\"只列出监听中的连接\"></a>只列出监听中的连接</h4><pre class=\" language-sh\"><code class=\"language-sh\">netstat -tnl\n</code></pre>\n<pre class=\" language-sh\"><code class=\"language-sh\">激活Internet连接 (仅服务器)\nProto Recv-Q Send-Q Local Address           Foreign Address         State      \ntcp        0      0 192.168.122.1:53        0.0.0.0:*               LISTEN     \ntcp        0      0 127.0.0.1:631           0.0.0.0:*               LISTEN     \ntcp        0      0 127.0.0.1:35600         0.0.0.0:*               LISTEN     \ntcp        0      0 127.0.0.54:53           0.0.0.0:*               LISTEN     \ntcp        0      0 127.0.0.1:31080         0.0.0.0:*               LISTEN     \ntcp        0      0 127.0.0.1:31055         0.0.0.0:*               LISTEN     \ntcp        0      0 127.0.1.1:53            0.0.0.0:*               LISTEN     \ntcp        0      0 127.0.0.53:53           0.0.0.0:*               LISTEN     \ntcp6       0      0 :::41499                :::*                    LISTEN     \ntcp6       0      0 127.0.0.1:52829         :::*                    LISTEN     \ntcp6       0      0 127.0.0.1:35955         :::*                    LISTEN     \ntcp6       0      0 127.0.0.1:63343         :::*                    LISTEN     \ntcp6       0      0 127.0.0.1:63342         :::*                    LISTEN     \n</code></pre>\n<h4 id=\"获取进程名、进程号以及用户-ID\"><a href=\"#获取进程名、进程号以及用户-ID\" class=\"headerlink\" title=\"获取进程名、进程号以及用户 ID\"></a>获取进程名、进程号以及用户 ID</h4><pre class=\" language-sh\"><code class=\"language-sh\">netstat -tunlp\n</code></pre>\n<pre class=\" language-sh\"><code class=\"language-sh\">Active Internet connections (only servers)\nProto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name\ntcp        0      0 127.0.1.1:53            0.0.0.0:*               LISTEN      1144/dnsmasq    \ntcp        0      0 127.0.0.1:631           0.0.0.0:*               LISTEN      661/cupsd       \ntcp6       0      0 ::1:631                 :::*                    LISTEN      661/cupsd\n</code></pre>\n<h4 id=\"查看进程的拥有者会更有用。使用-ep-选项可以同时查看进程名和用户名\"><a href=\"#查看进程的拥有者会更有用。使用-ep-选项可以同时查看进程名和用户名\" class=\"headerlink\" title=\"查看进程的拥有者会更有用。使用 -ep 选项可以同时查看进程名和用户名\"></a>查看进程的拥有者会更有用。使用 -ep 选项可以同时查看进程名和用户名</h4><pre class=\" language-sh\"><code class=\"language-sh\">netstat -tunlep\n</code></pre>\n<pre class=\" language-sh\"><code class=\"language-sh\">Proto Recv-Q Send-Q Local Address           Foreign Address         State       User       Inode      PID/Program name    \ntcp        0      0 192.168.122.1:domain    0.0.0.0:*               LISTEN      root       14887      1567/dnsmasq        \ntcp        0      0 localhost:ipp           0.0.0.0:*               LISTEN      root       1946474    310640/cupsd     \n</code></pre>\n<p>参考：<br><a href=\"https://docs.oracle.com/cd/E26926_01/html/E25874/ipconfig-142.html\">https://docs.oracle.com/cd/E26926_01/html/E25874/ipconfig-142.html</a></p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>",
            "tags": [
                "Linux",
                "Network",
                "Linux",
                "Network"
            ]
        },
        {
            "id": "https://costalong.com/2024/07/03/linux/wechat/",
            "url": "https://costalong.com/2024/07/03/linux/wechat/",
            "title": "ubuntu24.04 微信客户端",
            "date_published": "2024-07-03T07:14:42.000Z",
            "content_html": "<h2 id=\"使用终端命令行安装铜豌豆软件源。注意需要用到sudo权限\"><a href=\"#使用终端命令行安装铜豌豆软件源。注意需要用到sudo权限\" class=\"headerlink\" title=\"使用终端命令行安装铜豌豆软件源。注意需要用到sudo权限\"></a>使用终端命令行安装铜豌豆软件源。注意需要用到sudo权限</h2><pre class=\" language-sh\"><code class=\"language-sh\">wget -c -O atzlinux-v12-archive-keyring_lastest_all.deb https://www.atzlinux.com/atzlinux/pool/main/a/atzlinux-archive-keyring/atzlinux-v12-archive-keyring_lastest_all.deb\nsudo apt -y install ./atzlinux-v12-archive-keyring_lastest_all.deb\n</code></pre>\n<h2 id=\"使用终端命令行安装微信原生版本。注意需要用到sudo权限\"><a href=\"#使用终端命令行安装微信原生版本。注意需要用到sudo权限\" class=\"headerlink\" title=\"使用终端命令行安装微信原生版本。注意需要用到sudo权限\"></a>使用终端命令行安装微信原生版本。注意需要用到sudo权限</h2><pre class=\" language-sh\"><code class=\"language-sh\">sudo apt update\nsudo cp /etc/lsb-release /etc/lsb-release.Ubuntu\nsudo apt -y install electronic-wechat-icons-atzlinux\nsudo apt -y install com.tencent.wechat\nsudo cp /etc/lsb-release /etc/lsb-release.wechat\n</code></pre>\n<h2 id=\"登录微信并使用\"><a href=\"#登录微信并使用\" class=\"headerlink\" title=\"登录微信并使用\"></a>登录微信并使用</h2><pre class=\" language-sh\"><code class=\"language-sh\">wechat\n</code></pre>\n<p>登录成功以后，下次就可以直接在终端使用wechat启动微信，或者在显示应用程序里面找到微信linux原生版图标启动了。本次安装的微信版本号：1.0.0.241</p>\n<p><img src=\"/medias/loading.gif\" data-original=\"/images/linux/wechat/image.png\" alt=\"start wechat\"></p>\n<p><a href=\"https://link.zhihu.com/?target=https://www.atzlinux.com/\">铜豌豆 Linux</a>是个开源网站</p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>",
            "tags": [
                "linux",
                "ubuntu",
                "微信"
            ]
        },
        {
            "id": "https://costalong.com/2023/09/13/linux/ubuntu-install-nfs-server/",
            "url": "https://costalong.com/2023/09/13/linux/ubuntu-install-nfs-server/",
            "title": "ubuntu 安装 nfs",
            "date_published": "2023-09-13T10:49:02.000Z",
            "content_html": "<ol>\n<li>安装nfs服务</li>\n</ol>\n<pre class=\" language-sh\"><code class=\"language-sh\">sudo apt install nfs-kernel-server\n</code></pre>\n<ol start=\"2\">\n<li>编辑配置文件</li>\n</ol>\n<pre class=\" language-sh\"><code class=\"language-sh\">sudo vim /etc/exports\n\n# Example for NFSv4:\n# /srv/nfs4        gss/krb5i(rw,sync,fsid=0,crossmnt,no_subtree_check)\n# /srv/nfs4/homes  gss/krb5i(rw,sync,no_subtree_check)\n#\n/data/nfs-share *(rw,sync,no_subtree_check,no_root_squash) \n</code></pre>\n<ol start=\"3\">\n<li>创建共享目录</li>\n</ol>\n<pre class=\" language-sh\"><code class=\"language-sh\">sudo mkdir -p /data/nfs-share\n</code></pre>\n<ol start=\"4\">\n<li>重启nfs服务</li>\n</ol>\n<pre class=\" language-sh\"><code class=\"language-sh\">sudo service nfs-kernel-server restart\n</code></pre>\n<ol start=\"5\">\n<li><p>常用命令工具</p>\n<p>已经安装的nfs无需安装客户端</p>\n</li>\n</ol>\n<pre class=\" language-sh\"><code class=\"language-sh\"># 显示已经mount到本机上\nsudo showmount -e localhost\n# 将配置文件中的目录全部重新 Export一次，无需重启\nsudo exportfs -rv\n# 查看nfs的运行状态\nsudo nfsstat\n#查看rpc执行信息，可以用于检测rpc运行情况\nsudo rpcinfo\n\n#查看网络端口，NFS默认是使用111端口。\nsudo netstat -tu -4\n</code></pre>\n<ol start=\"6\">\n<li>客户端的命令</li>\n</ol>\n<pre class=\" language-sh\"><code class=\"language-sh\"># 安装客户端命令\nsudo apt install nfs-common\n</code></pre>\n<ol start=\"7\">\n<li>显示指定的（192.168.2.167）NFS服务器上export出来的目录</li>\n</ol>\n<pre class=\" language-sh\"><code class=\"language-sh\">sudo showmount -e 192.168.2.167\n</code></pre>\n<ol start=\"8\">\n<li>创建本地挂载目录</li>\n</ol>\n<pre class=\" language-sh\"><code class=\"language-sh\">sudo mkdir -p /mnt/data\n</code></pre>\n<ol start=\"9\">\n<li>挂载共享目录</li>\n</ol>\n<pre class=\" language-sh\"><code class=\"language-sh\">sudo mount -t nfs 192.168.3.167:/data/nfs-share /mnt/data\n</code></pre>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>",
            "tags": [
                "linux",
                "nfs",
                "storage"
            ]
        }
    ]
}