{
    "version": "https://jsonfeed.org/version/1",
    "title": "翼舞成梦",
    "subtitle": "翼舞成梦",
    "icon": "https://costalong.com/images/favicon.ico",
    "description": "",
    "home_page_url": "https://costalong.com",
    "items": [
        {
            "id": "https://costalong.com/2023/09/13/traefik/treafik-introduce/",
            "url": "https://costalong.com/2023/09/13/traefik/treafik-introduce/",
            "title": "traefik 简介",
            "date_published": "2023-09-13T03:18:12.000Z",
            "content_html": "<h3 id=\"1-官方文档\"><a href=\"#1-官方文档\" class=\"headerlink\" title=\"1. 官方文档\"></a>1. 官方文档</h3><p><a href=\"https://doc.traefik.io/traefik/\">https://doc.traefik.io/traefik/</a></p>\n<h3 id=\"2-简介\"><a href=\"#2-简介\" class=\"headerlink\" title=\"2. 简介\"></a>2. 简介</h3><p>traefik是一个使你把微服务暴露出来变的更容易的http反向代理和负载均衡软件。traefik支持K8S、docker swarm、mesos、consul、etcd、zookeeper等基础设施组件，动态的应用它的配置文件设置。</p>\n<h3 id=\"3-流量示意图\"><a href=\"#3-流量示意图\" class=\"headerlink\" title=\"3. 流量示意图\"></a>3. 流量示意图</h3><p><img src=\"/medias/loading.gif\" data-original=\"http://file.longqiuhong.com/uploads/picgo/treafik-flow.png\" alt=\"treafik-flow\"></p>\n<p>代理入口</p>\n<p><img src=\"/medias/loading.gif\" data-original=\"https://file.longqiuhong.com/uploads/picgo/route-flow.png\" alt=\"route-flow\"></p>\n<p>路由：</p>\n<p><img src=\"/medias/loading.gif\" data-original=\"http://file.longqiuhong.com/uploads/picgo/routers.png\" alt=\"routers\"></p>\n<h3 id=\"4-核心概念\"><a href=\"#4-核心概念\" class=\"headerlink\" title=\"4. 核心概念\"></a>4. 核心概念</h3><p>当启动Traefik时，需要定义<code>entrypoints</code>，然后通过entrypoints的路由来分析传入的请求，来查看他们是否是一组规则匹配，如果匹配，则路由可能将请求通过一系列的转换过来在发送到服务上去。</p>\n<p><img src=\"/medias/loading.gif\" data-original=\"https://file.longqiuhong.com/uploads/picgo/agence.png\" alt=\"agence\"></p>\n<ul>\n<li><code>Providers</code> 是基础组件，traefik的配置发现是通过它来实现，它可以是协调器，容器引擎，云提供商或键值存储，通过查询 Providers 的API来查询路由的相关信息，一旦检查变化，就会动态更新路由</li>\n<li><code>Entrypoints</code>监听传入的流量，是网络的入口点，定义了接受请求的端口(HTTP或者TCP)</li>\n<li><code>Routers</code>分析请求(host,path,headers,SSL等)，负责将传入的请求连接到可以处理这些请求的服务上去</li>\n<li><code>Service</code>将请求转发给应用，负责配置如何最终将处理传入请求的实际服务</li>\n<li><code>Middlewares</code>中间件，用来修改请求或者根据请求来做出判断，中间件被附件到路由上，是一种在请求发送到服务之前调整请求的一种方法</li>\n</ul>\n<h3 id=\"5-路由规则\"><a href=\"#5-路由规则\" class=\"headerlink\" title=\"5. 路由规则\"></a>5. 路由规则</h3><p>路由类型分为三种，分别为：<code>http</code>、<code>tcp</code>、<code>udp</code></p>\n<p>路由规则是指，Traefik接收到的请求，根据给定规则路由到不同的服务中。</p>\n<table>\n<thead>\n<tr>\n<th>Rule</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Headers(<code>key</code>, <code>value</code>)</td>\n<td>Check if there is a key keydefined in the headers, with the value value</td>\n</tr>\n<tr>\n<td>HeadersRegexp(<code>key</code>, <code>regexp</code>)</td>\n<td>Check if there is a key keydefined in the headers, with a value that matches the regular expression regexp</td>\n</tr>\n<tr>\n<td>Host(<code>example.com</code>, …)</td>\n<td>Check if the request domain (host header value) targets one of the given domains.</td>\n</tr>\n<tr>\n<td>HostHeader(<code>example.com</code>, …)</td>\n<td>Check if the request domain (host header value) targets one of the given domains.</td>\n</tr>\n<tr>\n<td>HostRegexp(<code>example.com</code>, <code>{subdomain:[a-z]+}.example.com</code>, …)</td>\n<td>Check if the request domain matches the given regexp.</td>\n</tr>\n<tr>\n<td>Method(<code>GET</code>, …)</td>\n<td>Check if the request method is one of the given methods (GET, POST, PUT, DELETE, PATCH, HEAD)</td>\n</tr>\n<tr>\n<td>Path(<code>/path</code>, <code>/articles/{cat:[a-z]+}/{id:[0-9]+}</code>, …)</td>\n<td>Match exact request path. It accepts a sequence of literal and regular expression paths.</td>\n</tr>\n<tr>\n<td>PathPrefix(<code>/products/</code>, <code>/articles/{cat:[a-z]+}/{id:[0-9]+}</code>)</td>\n<td>Match request prefix path. It accepts a sequence of literal and regular expression prefix paths.</td>\n</tr>\n<tr>\n<td>Query(<code>foo=bar</code>, <code>bar=baz</code>)</td>\n<td>Match Query String parameters. It accepts a sequence of key=value pairs.</td>\n</tr>\n<tr>\n<td>ClientIP(<code>10.0.0.0/16</code>, <code>::1</code>)</td>\n<td>Match if the request client IP is one of the given IP/CIDR. It accepts IPv4, IPv6 and CIDR formats</td>\n</tr>\n</tbody></table>\n<p>这个正则配起来稍微有点小坑</p>\n<p>为了对<code>Host</code>和<code>Path</code>使用正则表达式，需要声明一个任意命名的变量，然后跟上用冒号分隔的正则表达式，所有这些都用花括号括起来。</p>\n<pre class=\" language-yaml\"><code class=\"language-yaml\">HostRegexp(`grafana.<span class=\"token punctuation\">{</span>domain<span class=\"token punctuation\">:</span>.*<span class=\"token punctuation\">}</span>`)\n</code></pre>\n<h3 id=\"6-服务\"><a href=\"#6-服务\" class=\"headerlink\" title=\"6. 服务\"></a>6. 服务</h3><p><img src=\"/medias/loading.gif\" data-original=\"https://file.longqiuhong.com/uploads/picgo/services.png\" alt=\"services\"></p>\n<p>服务负责配置如何到达实际的服务，最终将处理传入的请求。使用<code>service</code>定义：</p>\n<pre class=\" language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">http</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">traefik</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">loadBalancer</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">servers</span><span class=\"token punctuation\">:</span>\n          <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"http://127.0.0.1:10000\"</span>\n</code></pre>\n<p>​\t更多配置，可以参考：<a href=\"https://doc.traefik.io/traefik/routing/services/\">官网介绍</a></p>\n<h3 id=\"7-中间件\"><a href=\"#7-中间件\" class=\"headerlink\" title=\"7. 中间件\"></a>7. 中间件</h3><p><img src=\"/medias/loading.gif\" data-original=\"http://file.longqiuhong.com/uploads/picgo/middleware.png\" alt=\"middleware\"></p>\n<p>从图中基本可以明白中间件的作用，也可以理解成拦截器。<br>Traefik中有几种可用的中间件：一些可以修改请求、请求头，一些负责重定向，一些可以添加身份验证等等。</p>\n<p>下面是一个官网给出的示例：</p>\n<pre class=\" language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\" spellcheck=\"true\"># As YAML Configuration File</span>\n<span class=\"token key atrule\">http</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">routers</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">router1</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">service</span><span class=\"token punctuation\">:</span> myService\n      <span class=\"token key atrule\">middlewares</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token string\">\"foo-add-prefix\"</span>\n      <span class=\"token key atrule\">rule</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Host(`example.com`)\"</span>\n\n  <span class=\"token key atrule\">middlewares</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">foo-add-prefix</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">addPrefix</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">prefix</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"/foo\"</span>\n\n  <span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">service1</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">loadBalancer</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">servers</span><span class=\"token punctuation\">:</span>\n          <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"http://127.0.0.1:80\"</span>\n</code></pre>\n<h3 id=\"参考连接\"><a href=\"#参考连接\" class=\"headerlink\" title=\"参考连接\"></a>参考连接</h3><ul>\n<li><a href=\"https://github.com/traefik/traefik\">Traefik源码仓库</a></li>\n<li><a href=\"https://traefik.io/\">Traefik官网</a></li>\n<li><a href=\"https://doc.traefik.io/traefik/reference/static-configuration/file/\">Traefik静态配置项-File provider</a></li>\n<li><a href=\"https://letsencrypt.org/\">Let’s Encrypt</a></li>\n<li><a href=\"https://www.freedesktop.org/software/systemd/man/systemd.unit.html\">Systemd文档</a></li>\n<li><a href=\"https://ormissia.github.io/posts/deployment/3003-linux-traefik/\">ormissia blog</a></li>\n</ul>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>",
            "tags": [
                "traefik",
                "k8s",
                "traefik"
            ]
        }
    ]
}